Pycante {
  Program = Statement* 
  Statement = Exp
            | Loop  
            | FunDec  
            | Block
            | Assignment
            | Conditional
            | VarDec  
            | Class      
            | Return
  Exp = Exp mulop Exp1
       | Exp1
  Exp1 = Exp1 addop Exp2
       | Exp2
  Exp2 = Exp2 "**" Exp3
       | Exp3
  Exp3 = Exp3 relop Exp4
       | Exp4 
  Exp4 = Exp4 booleanp Exp5
       | Exp5
  Exp5 = pluspluaop Exp5
        | "(" Exp ")"
        
  TypeInference = "what" "(" Exp | id | Types ")"
  Assignment = id "=" Exp
  Block = newline "\t" (VarDec | Exp | Loop | Conditional | Assignment | TypeInference | print )
  Loop = For | While
  Conditional = IF
  For = "for" "(" VarDec ";" Exp relop Exp ";" Exp ")"  Block       
  While = "while" "(" Number | id |  Exp  relop  Number | id | Exp ")" Block
  IF = "if" "("((Number) | (id) | (Exp)) relop ((Number) | (id) | (Exp)) ")" Block 
  Class = "class" space+ id Block
  VarDec = "let" id "=" Types
  Return = "return" ((Exp)? | (id)? | (Types)? )
  FunDec = hotpepper space+ id  "(" ( id ("," id)*) ")" Block Return
  Boolean = "true" | "false"
  hotpepper = "üå∂Ô∏è"
  List = "[" (Number ("," Number)*) "]" 
       | "[" (String ("," String)*) "]"
       | "[" (Boolean ("," Boolean)*) "]" 
  Number = digit+
  StringConcat = (String space+ pluspluaop space+ String)+
  keyword =  ("let" | "for" | "while" | "while"
              |  "return" | hotpepper | "if" | "else" | "else if" | "what"| print | "true" | "false") ~idrest
  Types  =  "Boolean" | "Number" | "String" |
  String = "\"" string | "\'")* "\""
  space  := " "
  print =  "console.hot" "(" Exp | Types | id | TypeInference ")"
  addop   = "+" | "-"
  pluspluaop = "++"
  decrementop = "--"
  negate = "-"
  booleanp = "&" |  "|"
  mulop   = "*"| "%" | "/"
  relop   = "<=" | ">=" | ">" | "<" | "==" | "!="
  id = ~keyword chars idrest*
  newline = "\n"+
 
  idrest =  "_" | chars
  chars = "a".."z" | "A".."Z" 
  special = space
  string = digit+ | chars+
  digit = "0..9"
}
